services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: browser_agents
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  browser-pod:
    build: ./browser-pod
    ports:
      - "8000:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - BROWSER_HEADLESS=true
      - MAX_CONCURRENT_TASKS=5
      - TASK_TIMEOUT=3600
    volumes:
      - ./browser-pod/storage:/app/storage
      - /dev/shm:/dev/shm  # Shared memory for browser
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  dashboard:
    build: ./dashboard
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/browser_agents
      - NEXTAUTH_SECRET=your-nextauth-secret-key-here-change-in-production
      - NEXTAUTH_URL=http://localhost:3000
      - BROWSER_POD_URL=http://browser-pod:8000
      - API_TIMEOUT=30000
    depends_on:
      postgres:
        condition: service_healthy
      browser-pod:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
  browser_pod_storage:
